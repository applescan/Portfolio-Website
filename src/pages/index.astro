---
import About from "../components/Sections/About";
import Experience from "../components/Sections/Experience";
import Profile from "../components/Sections/Profile";
import Projects from "../components/Sections/Projects";
import Layout from "../layouts/Layout.astro";
import {
  type AboutMe,
  type ProjectCard,
  type Hero,
  contentfulClient,
  type WorkExperience,
  type Education,
} from "../lib/contentful";

const profileEntries = await contentfulClient.getEntries<Hero>({
  content_type: "hero",
});

const aboutEntries = await contentfulClient.getEntries<AboutMe>({
  content_type: "aboutMe",
});

const projectEntries = await contentfulClient.getEntries<ProjectCard>({
  content_type: "projectCard",
});

const experienceEntries = await contentfulClient.getEntries<WorkExperience>({
  content_type: "workExperience",
});

const educationEntries = await contentfulClient.getEntries<Education>({
  content_type: "education",
});

const heroItem =
  profileEntries.items.length > 0
    ? {
        title: profileEntries.items[0].fields.title,
        desc: profileEntries.items[0].fields.description,
        subTitle: profileEntries.items[0].fields.subTitle,
      }
    : null;

const aboutItem =
  aboutEntries.items.length > 0
    ? {
        title: aboutEntries.items[0].fields.title,
        desc: aboutEntries.items[0].fields.description,
      }
    : null;

function isStringArray(value: unknown): value is string[] {
  return (
    Array.isArray(value) && value.every((item) => typeof item === "string")
  );
}

const experienceItems = experienceEntries.items.map((item) => ({
  title: item.fields.title,
  text: item.fields.period,
  list: isStringArray(item.fields.descriptionList)
    ? item.fields.descriptionList
    : [],
}));

const educationItems = educationEntries.items.map((item) => ({
  title: item.fields.title,
  text: item.fields.period,
  list: isStringArray(item.fields.description) ? item.fields.description : [],
}));
---

<Layout title="Felicia's Portfolio Website">
  {
    heroItem && (
      <Profile
        title={heroItem.title}
        subTitle={heroItem.subTitle}
        desc={heroItem.desc}
      />
    )
  }

  {aboutItem && <About title={aboutItem.title} desc={aboutItem.desc} />}

  {
    projectEntries.items.length > 0 && (
      <Projects
        projectItems={projectEntries.items
          .slice()
          .reverse()
          .map((item) => ({
            img: item.fields.img,
            title: item.fields.title,
            text: item.fields.description,
            link: item.fields.link,
          }))}
      />
    )
  }

  {
    experienceItems.length > 0 && (
      <Experience
        experienceItems={experienceItems}
        educationItems={educationItems}
      />
    )
  }
</Layout>
